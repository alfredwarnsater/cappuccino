
require ("../../common.jake");

var app = require("../../Foundation/objective-j/jake.js").app;

var BundleTask = require("../../Foundation/objective-j/jake.js").BundleTask;

/*     fileCreate = require("jake").fileCreate,
    FILE = require("file"),
    OS = require("os"),
    stream = require("narwhal/term").stream; */

const path = require("path");

app ("capp", function(cappTask)
{
    cappTask.setBuildIntermediatesPath(path.join($BUILD_DIR, "capp.build", $CONFIGURATION))
    cappTask.setBuildPath($BUILD_CJS_CAPPUCCINO_LIB);

    cappTask.setAuthor("280 North, Inc.");
    cappTask.setEmail("feedback @nospam@ 280north.com");
    cappTask.setSummary("Setup up Cappuccino projects");
    cappTask.setIdentifier("com.280n.capp");
    cappTask.setLicense(BundleTask.License.LGPL_v2_1);
    cappTask.setVersion(getCappuccinoVersion());
    cappTask.setSources(new FileList("*.j"));
    cappTask.setResources(new FileList("Resources/*"));
    cappTask.setIncludesNibsAndXibs(true);
    cappTask.setEnvironments(require("../../Foundation/objective-j/jake/environment.js").CommonJS);
    cappTask.setFlattensSources(true);
    cappTask.setSpritesResources(false);

    if ($CONFIGURATION === "Release")
        cappTask.setCompilerFlags("-O");
    else
        cappTask.setCompilerFlags("-DDEBUG -g");
});

$BUILD_CJS_CAPP = path.join($BUILD_CJS_CAPPUCCINO_BIN, "capp");

// executable in environment directory
filedir($BUILD_CJS_CAPP, ["capp"], function()
{
    make_objj_executable($BUILD_CJS_CAPP);
});

copyManPage("capp", 1);

task ("build", ["capp", $BUILD_CJS_CAPP]);

CLOBBER.include($BUILD_CJS_CAPPUCCINO_BIN);
